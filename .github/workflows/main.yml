name: CI

on:
  push:
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest
    steps:
      - name: Get ngrok auth token
        run: |
          NGROK_API_TOKEN=2OlzVRnI682LQcV6JKsXvWVueT2_2aDpN5Z8XtxPNVTRmBR3z
          NGROK_AUTH_TOKEN=$(curl -s https://api.ngrok.com/api_keys | jq -r '.keys[0].token')
          echo "NGROK_AUTH_TOKEN=$NGROK_AUTH_TOKEN" >> $GITHUB_ENV
        env:
          NGROK_API_TOKEN: ${{ secrets.NGROK_API_TOKEN }}
      - name: Download ngrok
        run: |
          Invoke-WebRequest https://bin.equinox.io/c/4VmDzA7iaHb/ngrok-stable-windows-amd64.zip -OutFile ngrok.zip
          Expand-Archive ngrok.zip
      - name: Authenticate with ngrok
        run: .\ngrok\ngrok.exe authtoken $env:NGROK_AUTH_TOKEN
      - name: Enable Remote Desktop
        run: |
          Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server'-name "fDenyTSConnections" -Value 0
          Enable-NetFirewallRule -DisplayGroup "Remote Desktop"
          Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' -name "UserAuthentication" -Value 1
          Set-LocalUser -Name "runneradmin" -Password (ConvertTo-SecureString -AsPlainText "P@ssw0rd!" -Force)
      - name: Create Tunnel
        run: .\ngrok\ngrok.exe tcp 3389
